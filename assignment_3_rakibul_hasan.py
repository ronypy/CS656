# -*- coding: utf-8 -*-
"""Assignment_3_rakibul_hasan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lCeAeiakVrEZ59d-hvGTGQNWe3uwblYT
"""

import random

def create_server_clients():
   server=[]
   client_1=[]
   client_2=[]
   client_3=[]
   for x in range(1,14):
      server.append(x)
      client_1.append(x)
      client_2.append(x)
      client_3.append(x)
   return server, client_1, client_2, client_3

def SERVER(server):
  a= random.choice(server)
  server.remove(a)
  return a, server

def CLIENT_1(server_return_value,client_1):
  c1= random.choice(client_1)
  client_1.remove(c1)
  return c1, client_1

def CLIENT_2(server_return_value,client_2):
  c2= random.choice(client_2)
  client_2.remove(c2)
  return c2, client_2

def CLIENT_3(server_return_value,client_3):
  c3= random.choice(client_3)
  client_3.remove(c3)
  return c3, client_3

def comparator(c1_value, c2_value, c3_value):
  c = [c1_value, c2_value, c3_value]
  max_value_position = [i for i, x in enumerate(c) if x == max(c)]
  return max_value_position

def score_calculation(score,server_return_value, max_value_position):
  length= len(max_value_position)
  if length==1:
    score[max_value_position[0]]=score[max_value_position[0]]+server_return_value
  elif length ==2:
    for i in range(1):
      score[max_value_position[0]]= score[max_value_position[0]]+server_return_value
      score[max_value_position[1]]= score[max_value_position[1]]+server_return_value
  else:
    score=[i+ server_return_value for i in score]
  return score

def main():
    score=[0,0,0]
    server, client_1, client_2, client_3 = create_server_clients()
    for i in range(1,14):
      server_return_value, server = SERVER(server)
      c1_value, client_1 = CLIENT_1(server_return_value, client_1)
      c2_value, client_2 = CLIENT_2(server_return_value, client_2)
      c3_value, client_3 = CLIENT_3(server_return_value, client_3)
      max_value_position = comparator(c1_value, c2_value, c3_value)
      score = score_calculation(score,server_return_value, max_value_position)
    winner = [i for i, x in enumerate(score) if x == max(score)]
    if len(winner)==1:
      print("Winner is client", winner[0]+1) 
    elif len(winner)==2:
      print("Winner is client", winner[0]+1," and client", winner[1]+1)
    else:
      print("All 3 clients are winner")


if __name__=="__main__":
    main()

